import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,d as n}from"./app-De7shokQ.js";const l="/assets/note/uml/UML%E5%9B%BE%E4%BE%8B.png",e="/assets/note/uml/%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB%E7%9A%84%E4%BE%8B%E5%AD%90.png",t="/assets/note/uml/%E6%B3%9B%E5%8C%96%E5%85%B3%E7%B3%BB%E7%9A%84%E4%BE%8B%E5%AD%90.png",h="/assets/note/uml/%E5%AE%9E%E7%8E%B0%E5%85%B3%E7%B3%BB%E7%9A%84%E4%BE%8B%E5%AD%90.png",p="/assets/note/uml/%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB%E7%9A%84%E4%BE%8B%E5%AD%90.png",k="/assets/note/uml/%E8%81%9A%E5%90%88%E5%85%B3%E7%B3%BB%E7%9A%84%E4%BE%8B%E5%AD%90.png",d="/assets/note/uml/%E7%BB%84%E5%90%88%E5%85%B3%E7%B3%BB%E7%9A%84%E4%BE%8B%E5%AD%90.png",r={},c=n('<h2 id="定义" tabindex="-1"><a class="header-anchor" href="#定义"><span>定义</span></a></h2><p>UML(Unified modeling language)<strong>统一建模语言</strong>，是一种用于软件系统分析和设计的语言工具。它用于帮助软件开发人员进行思考和记录思路的结果</p><p>UML 本身是一套浮好的规定，就像数学符号和化学符号一样，这些符号用于描述软件模型中的各个元素和它们之间的关系，比如类、接口、实现、泛化、依赖、组合、聚合等，如下图：</p><figure><img src="'+l+`" alt="UML图例" tabindex="0" loading="lazy"><figcaption>UML图例</figcaption></figure><p>使用 UML 来建模，常用的工具有 Rational Rose，也可以使用一些插件来建模。</p><h2 id="uml-图分类" tabindex="-1"><a class="header-anchor" href="#uml-图分类"><span>UML 图分类</span></a></h2><ul><li>用例图</li><li>静态结构图 <ul><li>类图</li><li>对象图</li><li>包图</li><li>组件图</li><li>部署图</li></ul></li><li>动态行为图 <ul><li>交互图（时序图与协作图）</li><li>状态图</li><li>活动图</li></ul></li></ul><h2 id="类图" tabindex="-1"><a class="header-anchor" href="#类图"><span>类图</span></a></h2><h3 id="定义-1" tabindex="-1"><a class="header-anchor" href="#定义-1"><span>定义</span></a></h3><p>用于描述系统中的类（对象）本身的组成和类（对象）之间的各种静态关系。</p><blockquote><p>类图描述的是类与类之间的关系，是 UML 图中最核心的</p></blockquote><h3 id="关系" tabindex="-1"><a class="header-anchor" href="#关系"><span>关系</span></a></h3><p>类之间的关系：依赖、泛化（继承）、实现、关联、聚合与组合</p><h4 id="依赖关系" tabindex="-1"><a class="header-anchor" href="#依赖关系"><span>依赖关系</span></a></h4><p>只要是在类中用到了对方，那么类之间就存在依赖关系，如果没有对方，编译都通不过。</p><ul><li>类的成员变量</li><li>类的方法的返回值</li><li>类的方法的参数类型</li><li>类的方法中使用到的类型</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// PersonService.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> PersonService</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    private</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> PersonDao</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> personDao</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    public</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> void</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> save</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;">Person</span><span style="--shiki-light:#B1108E;--shiki-dark:#9CDCFE;"> person</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">) {</span></span>
<span class="line"><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;">        personDao</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;">save</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(person);</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    public</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> IdCard</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> getIdCard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;">Integer</span><span style="--shiki-light:#B1108E;--shiki-dark:#9CDCFE;"> personId</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">) {</span></span>
<span class="line"><span style="--shiki-light:#7B30D0;--shiki-dark:#C586C0;">        return</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> personDao</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;">getIdCardById</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(personId);</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    public</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> void</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> modify</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">() {</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;">        Department</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> department</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7B30D0;--shiki-dark:#C586C0;"> new</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> Department</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">();</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// PersonDao.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> PersonDao</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Person.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Person</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// IdCard.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> IdCard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Department.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Department</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的类关系如下图所示：</p><figure><img src="`+e+`" alt="依赖关系的例子" tabindex="0" loading="lazy"><figcaption>依赖关系的例子</figcaption></figure><h4 id="泛化关系" tabindex="-1"><a class="header-anchor" href="#泛化关系"><span>泛化关系</span></a></h4><p>泛化关系实际上是继承关系，它是依赖关系的特例</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// BaseDao.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> abstract</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> BaseDao</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">  public</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> void</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> save</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;">Object</span><span style="--shiki-light:#B1108E;--shiki-dark:#9CDCFE;"> entity</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">) {}</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">  public</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> void</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> delete</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;">Integer</span><span style="--shiki-light:#B1108E;--shiki-dark:#9CDCFE;"> id</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">) {}</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// PersonDao.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> PersonDao</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> extends</span><span style="--shiki-light:#B02767;--shiki-dark:#4EC9B0;"> BaseDao</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的类关系如下图所示：</p><figure><img src="`+t+`" alt="泛化关系的例子" tabindex="0" loading="lazy"><figcaption>泛化关系的例子</figcaption></figure><h4 id="实现关系" tabindex="-1"><a class="header-anchor" href="#实现关系"><span>实现关系</span></a></h4><p>实现关系也是依赖关系的特例</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// PersonService.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> interface</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> PersonService</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;">    void</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> delete</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;">Integer</span><span style="--shiki-light:#B1108E;--shiki-dark:#9CDCFE;"> id</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// PersonServiceImpl.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> PersonServiceImpl</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> implements</span><span style="--shiki-light:#B02767;--shiki-dark:#4EC9B0;"> PersonService</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    public</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> void</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> delete</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;">Integer</span><span style="--shiki-light:#B1108E;--shiki-dark:#9CDCFE;"> id</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">) {}</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的类关系如下图所示：</p><figure><img src="`+h+`" alt="实现关系的例子" tabindex="0" loading="lazy"><figcaption>实现关系的例子</figcaption></figure><h4 id="关联关系" tabindex="-1"><a class="header-anchor" href="#关联关系"><span>关联关系</span></a></h4><p>关联关系实际上是类与类之间的联系，它是依赖关系的特例</p><p>关联具有<strong>导航性</strong>：即双向关系或单向关系。而关系具有多重性：</p><ul><li><code>1</code> 表示有且仅有一个</li><li><code>0...</code> 表示 0 个或多个</li><li><code>0,1</code> 表示 0 个或一个</li><li><code>n,m</code> 表示 n 到 m 个都可以</li><li><code>m...</code> 表示至少 m 个</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// 单向一对一关系</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Person.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Person</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    private</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> IdCard</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> idCard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">;</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// IdCard.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> IdCard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// 双向一对一关系</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Person.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Person</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    private</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> IdCard</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> idCard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">;</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// IdCard.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> IdCard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    private</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> Person</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> person</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">;</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的类关系如下图所示：</p><figure><img src="`+p+`" alt="关联关系的例子" tabindex="0" loading="lazy"><figcaption>关联关系的例子</figcaption></figure><h4 id="聚合关系" tabindex="-1"><a class="header-anchor" href="#聚合关系"><span>聚合关系</span></a></h4><p>聚合关系表示的是整体与部分的关系，<strong>整体与部分可以分开</strong>。聚合关系是关联关系的特例，所以它具有关联的导航性与多重性。</p><p>eg：一台电脑由键盘、显示器、鼠标等组成；组成电脑的各个配件是可以从电脑上分离出来的。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Computer.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Computer</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    private</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> Mouse</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> mouse</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">;</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    private</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> Keyboard</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> keyboard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    public</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> void</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> setMouse</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;">Mouse</span><span style="--shiki-light:#B1108E;--shiki-dark:#9CDCFE;"> mouse</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">) {</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#569CD6;">        this</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;">mouse</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> mouse;</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    public</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> void</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> setKeyboard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;">Keyboard</span><span style="--shiki-light:#B1108E;--shiki-dark:#9CDCFE;"> keyboard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">) {</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#569CD6;">        this</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;">keyboard</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> keyboard;</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">    }</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Mouse.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Mouse</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Keyboard.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Keyboard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的类关系如下图所示：</p><figure><img src="`+k+`" alt="聚合关系的例子" tabindex="0" loading="lazy"><figcaption>聚合关系的例子</figcaption></figure><h4 id="组合关系" tabindex="-1"><a class="header-anchor" href="#组合关系"><span>组合关系</span></a></h4><p>组合也是整体与部分的关系，但是<strong>整体与部分不可分开</strong>。</p><p>eg：电脑由 Cpu、硬盘、内存组成，没有这些电脑是不能开机的。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Computer.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Computer</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    private</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> Cpu</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> cpu</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7B30D0;--shiki-dark:#C586C0;"> new</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> Cpu</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">();</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    private</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> Disk</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> disk</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7B30D0;--shiki-dark:#C586C0;"> new</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> Disk</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">();</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Cpu.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Cpu</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Disk.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Disk</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的类关系如下图所示：</p><figure><img src="`+d+`" alt="组合关系的例子" tabindex="0" loading="lazy"><figcaption>组合关系的例子</figcaption></figure><p>举一个栗子：人和脑袋、身份证的关系：人不能没有脑袋，所以脑袋和人是组合关系；人可以没有身份证，所以人和身份证是聚合关系。但是在开发中，删除一个 Person 的时候，一般会同时删除 IdCard（级联删除），这个时候，IdCard<br> 和 Person 就是组合关系了。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Person.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Person</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    private</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> Head</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> head</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7B30D0;--shiki-dark:#C586C0;"> new</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> Head</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">();</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">    private</span><span style="--shiki-light:#0991B6;--shiki-dark:#4EC9B0;"> IdCard</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> idCard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">;</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// Head.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> Head</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// IdCard.java</span></span>
<span class="line"><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;">public</span><span style="--shiki-light:#DA5221;--shiki-dark:#569CD6;"> class</span><span style="--shiki-light:#0444AC;--shiki-dark:#4EC9B0;"> IdCard</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51),g=[c];function E(y,o){return a(),s("div",null,g)}const C=i(r,[["render",E],["__file","UML.html.vue"]]),D=JSON.parse(`{"path":"/docs/note/design/UML/UML.html","title":"统一建模语言","lang":"zh-CN","frontmatter":{"title":"统一建模语言","date":"2021-07-30T00:00:00.000Z","description":"定义 UML(Unified modeling language)统一建模语言，是一种用于软件系统分析和设计的语言工具。它用于帮助软件开发人员进行思考和记录思路的结果 UML 本身是一套浮好的规定，就像数学符号和化学符号一样，这些符号用于描述软件模型中的各个元素和它们之间的关系，比如类、接口、实现、泛化、依赖、组合、聚合等，如下图： UML图例UML图...","head":[["meta",{"property":"og:url","content":"https://blog.white233.top/docs/note/design/UML/UML.html"}],["meta",{"property":"og:site_name","content":"温故而知新~"}],["meta",{"property":"og:title","content":"统一建模语言"}],["meta",{"property":"og:description","content":"定义 UML(Unified modeling language)统一建模语言，是一种用于软件系统分析和设计的语言工具。它用于帮助软件开发人员进行思考和记录思路的结果 UML 本身是一套浮好的规定，就像数学符号和化学符号一样，这些符号用于描述软件模型中的各个元素和它们之间的关系，比如类、接口、实现、泛化、依赖、组合、聚合等，如下图： UML图例UML图..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://blog.white233.top/assets/note/uml/UML图例.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T02:14:43.000Z"}],["meta",{"property":"article:author","content":"White"}],["meta",{"property":"article:published_time","content":"2021-07-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-21T02:14:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"统一建模语言\\",\\"image\\":[\\"https://blog.white233.top/assets/note/uml/UML图例.png\\",\\"https://blog.white233.top/assets/note/uml/依赖关系的例子.png\\",\\"https://blog.white233.top/assets/note/uml/泛化关系的例子.png\\",\\"https://blog.white233.top/assets/note/uml/实现关系的例子.png\\",\\"https://blog.white233.top/assets/note/uml/关联关系的例子.png '关联关系的例子'\\",\\"https://blog.white233.top/assets/note/uml/聚合关系的例子.png '聚合关系的例子'\\",\\"https://blog.white233.top/assets/note/uml/组合关系的例子.png\\"],\\"datePublished\\":\\"2021-07-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-21T02:14:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"White\\",\\"url\\":\\"https://blog.white233.top\\",\\"email\\":\\"white996@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":2,"title":"UML 图分类","slug":"uml-图分类","link":"#uml-图分类","children":[]},{"level":2,"title":"类图","slug":"类图","link":"#类图","children":[{"level":3,"title":"定义","slug":"定义-1","link":"#定义-1","children":[]},{"level":3,"title":"关系","slug":"关系","link":"#关系","children":[]}]}],"git":{"createdTime":1664012965000,"updatedTime":1695262483000,"contributors":[{"name":"white","email":"294476387@qq.com","commits":1}]},"readingTime":{"minutes":3.83,"words":1150},"filePathRelative":"docs/note/design/UML/UML.md","localizedDate":"2021年7月30日","excerpt":"<h2>定义</h2>\\n<p>UML(Unified modeling language)<strong>统一建模语言</strong>，是一种用于软件系统分析和设计的语言工具。它用于帮助软件开发人员进行思考和记录思路的结果</p>\\n<p>UML 本身是一套浮好的规定，就像数学符号和化学符号一样，这些符号用于描述软件模型中的各个元素和它们之间的关系，比如类、接口、实现、泛化、依赖、组合、聚合等，如下图：</p>\\n<figure><img src=\\"/assets/note/uml/UML图例.png\\" alt=\\"UML图例\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>UML图例</figcaption></figure>","autoDesc":true}`);export{C as comp,D as data};
