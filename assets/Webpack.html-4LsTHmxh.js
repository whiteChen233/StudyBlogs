import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,d as n}from"./app-De7shokQ.js";const l={},e=n(`<h2 id="什么是-webpack" tabindex="-1"><a class="header-anchor" href="#什么是-webpack"><span>什么是 Webpack</span></a></h2><p>本质上，webpack 是一个现代 JavaScript 应用程序的静态<strong>模块打包</strong>器(module bundler)。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 bundle。</p><p>其实就是 <strong>模块</strong> 和 <strong>打包</strong></p><h2 id="前端模块化" tabindex="-1"><a class="header-anchor" href="#前端模块化"><span>前端模块化</span></a></h2><p>在 ES6 之前，需要借助其他工具才能进行模块化开发，完成开发后还需要处理模块间的各种依赖，并且需将其进行整合打包。</p><p>webpack 的一个核心就是让我们可以进行模块化开发，并且会帮助我们处理模块间的依赖关系。不仅仅是 JavaScript 文件，CSS、图片、json 文件等等都可以在微博 pack 中被当作模块来使用。</p><h2 id="webpack-安装" tabindex="-1"><a class="header-anchor" href="#webpack-安装"><span>webpack 安装</span></a></h2><p>webpack 需要 nodejs 的环境，使用 nodejs 中的包管理器 npm 安装 webpack: <code>npm install webpack -g</code></p><h2 id="入口和出口" tabindex="-1"><a class="header-anchor" href="#入口和出口"><span>入口和出口</span></a></h2><p>入口起点(entry point)指示 webpack 应该使用哪个模块，来作为构建其内部依赖图的开始。进入入口起点后，webpack 会找出有哪些模块和库是入口起点（直接和间接）依赖的。</p><p>output 属性告诉 webpack 在哪里输出它所创建的 bundles，以及如何命名这些文件，默认值为 ./dist。基本上，整个应用程序结构，都会被编译到你指定的输出路径的文件夹中。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// webpack.config.js</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> path</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;path&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">module</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">exports</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // 入口</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">  entry:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;./src/main.js&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // 出口</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">  output:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">    path:</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> path</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;">resolve</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;">__dirname</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">, </span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;dist&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">),</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">    filename:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;bundle.js&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>npm init</code>初始化 node 环境,生成<code>package.json</code>文件,在 script 中添加命令，即可使用<code>npm run xxx</code>来执行</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">{</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#9CDCFE;">  &quot;name&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">: </span><span style="--shiki-light:#00820F;--shiki-dark:#CE9178;">&quot;xxx&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#9CDCFE;">  &quot;version&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">: </span><span style="--shiki-light:#00820F;--shiki-dark:#CE9178;">&quot;xxx&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#9CDCFE;">  &quot;description&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">: </span><span style="--shiki-light:#00820F;--shiki-dark:#CE9178;">&quot;xxx&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#9CDCFE;">  &quot;main&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">: </span><span style="--shiki-light:#00820F;--shiki-dark:#CE9178;">&quot;xxx&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#9CDCFE;">  &quot;scripts&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">: {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">    // 使用 npm run [command] 来执行定义的命令</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#9CDCFE;">    &quot;test&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">: </span><span style="--shiki-light:#00820F;--shiki-dark:#CE9178;">&quot;echo </span><span style="--shiki-light:#174781;--shiki-dark:#D7BA7D;">\\&quot;</span><span style="--shiki-light:#00820F;--shiki-dark:#CE9178;">Error: no test specified</span><span style="--shiki-light:#174781;--shiki-dark:#D7BA7D;">\\&quot;</span><span style="--shiki-light:#00820F;--shiki-dark:#CE9178;"> &amp;&amp; exit 1&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#9CDCFE;">    &quot;build&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">: </span><span style="--shiki-light:#00820F;--shiki-dark:#CE9178;">&quot;webpack&quot;</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  },</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#9CDCFE;">  &quot;author&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">: </span><span style="--shiki-light:#00820F;--shiki-dark:#CE9178;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="loader" tabindex="-1"><a class="header-anchor" href="#loader"><span>loader</span></a></h2><p>loader 让 webpack 能够去处理那些非 JavaScript 文件（webpack 自身只理解 JavaScript）。loader 可以将所有类型的文件转换为 webpack 能够处理的有效模块，然后你就可以利用 webpack 的打包能力，对它们进行处理。</p><p>本质上，webpack loader 将所有类型的文件，转换为应用程序的依赖图（和最终的 bundle）可以直接引用的模块。</p><p>注意，loader 能够 import 导入任何类型的模块（例如 .css 文件），这是 webpack 特有的功能，其他打包程序或任务执行器的可能并不支持。<br> 在更高层面，在 webpack 的配置中 loader 有两个目标：</p><ol><li>test 属性，用于标识出应该被对应的 loader 进行转换的某个或某些文件。</li><li>use 属性，表示进行转换时，应该使用哪个 loader。</li></ol><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// webpack.config.js</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> path</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;path&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> config</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">  output:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">    filename:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;bundle.js&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">  module:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">    rules:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> [</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">      // use可以配置多个 loader，wbpack会从右到左加载</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">      { </span><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">test:</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;"> /</span><span style="--shiki-light:#174781;--shiki-dark:#D7BA7D;">\\.</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;">css</span><span style="--shiki-light:#7B30D0;--shiki-dark:#DCDCAA;">$</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;">/</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">, </span><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">use:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> [</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;style-loader&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">, </span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;css-loader&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">] },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">      {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">        test:</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;"> /</span><span style="--shiki-light:#174781;--shiki-dark:#D7BA7D;">\\.</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;">png</span><span style="--shiki-light:#7B30D0;--shiki-dark:#DCDCAA;">|</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;">jpg</span><span style="--shiki-light:#7B30D0;--shiki-dark:#DCDCAA;">|</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;">gif</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">)</span><span style="--shiki-light:#7B30D0;--shiki-dark:#DCDCAA;">$</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;">/</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">        use:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> [</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">          {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">            loader:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;url-loader&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">            // 当加载的图片小于limit时，会将图片编译成base64字符串返回，否则会使用file-loader</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">            options:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">              limit:</span><span style="--shiki-light:#174781;--shiki-dark:#B5CEA8;"> 8196</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">              // 文件打包的规则:存放在img文件夹下,保持名字使用8位hash值</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">              name:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;img/[name].[hash:8].[ext]&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">            },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">          },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">        ],</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">      },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">    ],</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">module</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">exports</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> config</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="es6-es5" tabindex="-1"><a class="header-anchor" href="#es6-es5"><span>ES6 -&gt; ES5</span></a></h3><p>使用 babel 这个 loader 可以将 ES6 的语法转换成 ES5，使用这条命令安装<code>npm install babel-loader babel-core babel-preset-2015</code></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// webpack.config.js</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">module</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">exports</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">  module:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">    rules:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> [</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">      {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">        test:</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;"> /</span><span style="--shiki-light:#174781;--shiki-dark:#D7BA7D;">\\.</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;">js</span><span style="--shiki-light:#7B30D0;--shiki-dark:#DCDCAA;">$</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;">/</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">        exclude:</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;"> /</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;">node_modules</span><span style="--shiki-light:#7B30D0;--shiki-dark:#DCDCAA;">|</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;">bower_components</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">)</span><span style="--shiki-light:#A44185;--shiki-dark:#D16969;">/</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">        use:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">          loader:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;babel-loader&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">          options:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">            presets:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> [</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;es2015&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">],</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">          },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">        },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">      },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">    ],</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="webpack-配置-vue" tabindex="-1"><a class="header-anchor" href="#webpack-配置-vue"><span>webpack 配置 Vue</span></a></h3><p>使用<code>npm install vue --save</code>安装 Vue，使用如下：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&lt;</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">html</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#E6E6E6;">  ...</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">  &lt;</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">body</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">    &lt;</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">div</span><span style="--shiki-light:#DF8618;--shiki-dark:#9CDCFE;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> id</span><span style="--shiki-light:#0071CE;--shiki-dark:#E6E6E6;">=</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&quot;app&quot;</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span><span style="--shiki-light:#0071CE;--shiki-dark:#E6E6E6;">{{ message }}</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&lt;/</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">div</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">    &lt;</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">script</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#7B30D0;--shiki-dark:#C586C0;">      import</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> Vue</span><span style="--shiki-light:#7B30D0;--shiki-dark:#C586C0;"> from</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#7B30D0;--shiki-dark:#569CD6;">      new</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> Vue</span><span style="--shiki-light:#0071CE;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#9CDCFE;">        el:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;#app&#39;</span></span>
<span class="line"><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;">        data</span><span style="--shiki-light:#0071CE;--shiki-dark:#D4D4D4;">: {</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#9CDCFE;">          message:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;hello webpack&#39;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#D4D4D4;">        }</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#D4D4D4;">      })</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">    &lt;/</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">script</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">  &lt;/</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">body</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&lt;/</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">html</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对上述代码使用 webpack 打包并运行，其中打包的过程应该不会出错，但是运行起来没有效果，查看浏览器控制台有报错，这里有下面这个问题：</p><blockquote><p>Vue 的 runtime-only 与 runtime-compiler 的区别：</p><ul><li>runtime-only:代码中不可以含有任何 template</li><li>runtime-compiler:代码中可以有 template，因为可以使用 compiler 对其进行编译</li></ul><p>这里有<a href="https://cn.vuejs.org/v2/guide/installation.html#%E8%BF%90%E8%A1%8C%E6%97%B6-%E7%BC%96%E8%AF%91%E5%99%A8-vs-%E5%8F%AA%E5%8C%85%E5%90%AB%E8%BF%90%E8%A1%8C%E6%97%B6" target="_blank" rel="noopener noreferrer">官方解释</a></p></blockquote><p>上面的代码使用的是 runtime-only 但是却包含了 template(<code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code>),所以代码执行不了</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">//webpack.config.js</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">//其实就是取别名，找到以 vue 结尾的，就去node_modules重新查一下路径</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">module</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">exports</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">  resolve:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">    alias:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">      vue$:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;vue/dist/vue.esm.js&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">, </span><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// 用webpack 1时需用&#39;vue/dist/vue.common.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">    },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="el-和-template-的区别" tabindex="-1"><a class="header-anchor" href="#el-和-template-的区别"><span>el 和 template 的区别</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&lt;</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">html</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">  &lt;</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">head</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#E6E6E6;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">  &lt;/</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">head</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">  &lt;</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">body</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">    &lt;</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">div</span><span style="--shiki-light:#DF8618;--shiki-dark:#9CDCFE;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> id</span><span style="--shiki-light:#0071CE;--shiki-dark:#E6E6E6;">=</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&quot;app&quot;</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;&lt;/</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">div</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">    &lt;</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">script</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#7B30D0;--shiki-dark:#C586C0;">      import</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> Vue</span><span style="--shiki-light:#7B30D0;--shiki-dark:#C586C0;"> from</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#7B30D0;--shiki-dark:#569CD6;">      new</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> Vue</span><span style="--shiki-light:#0071CE;--shiki-dark:#D4D4D4;">({</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">        // 当同时有el和template时，vue在编译的时候会将template里面的代码片段替换掉挂载app的div块</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#9CDCFE;">        el:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;#app&#39;</span></span>
<span class="line"><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;">        template</span><span style="--shiki-light:#0071CE;--shiki-dark:#D4D4D4;">: </span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">\`</span></span>
<span class="line"><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">          &lt;div&gt;</span></span>
<span class="line"><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">            {{ message }}</span></span>
<span class="line"><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">          &lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">        \`</span><span style="--shiki-light:#0071CE;--shiki-dark:#D4D4D4;">,</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#9CDCFE;">        data:</span><span style="--shiki-light:#0071CE;--shiki-dark:#D4D4D4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#9CDCFE;">          message:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;hello webpack&#39;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#D4D4D4;">        }</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#D4D4D4;">      })</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">    &lt;/</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">script</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">  &lt;/</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">body</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&lt;/</span><span style="--shiki-light:#0444AC;--shiki-dark:#569CD6;">html</span><span style="--shiki-light:#0071CE;--shiki-dark:#808080;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="plugin" tabindex="-1"><a class="header-anchor" href="#plugin"><span>plugin</span></a></h2><p>plugin 是插件的意思，通常是对于某个现有 框架进行拓展。webpack 中的插件，就是对 webpack 现有的功能的各种拓展，比如打包优化、文件压缩等。插件目的在于解决 loader 无法实现的其他事。</p><h3 id="loader-和-plugin-的区别" tabindex="-1"><a class="header-anchor" href="#loader-和-plugin-的区别"><span>loader 和 plugin 的区别</span></a></h3><ul><li>loader 主要用于转换某些类型的模块，它是一个转换器</li><li>plugin 是插件，它是对 webpack 本身的拓展，是一个拓展器</li></ul><h3 id="plugin-的使用" tabindex="-1"><a class="header-anchor" href="#plugin-的使用"><span>plugin 的使用</span></a></h3><ol><li>通过 npm 安装需要使用的 plugin(某些 webpack 已经内置的插件不需要安装)</li><li>在 webpack.config.js 中的 plugins 中配置插件</li></ol><h4 id="添加版权-plugin" tabindex="-1"><a class="header-anchor" href="#添加版权-plugin"><span>添加版权 plugin</span></a></h4><p>Bannerplugin: 为打包文件添加版权声明，是 webpack 自带的</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// webpack.config.js</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> webpack</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;webpack&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;">moduke</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;">exports</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">  plugins:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> [</span><span style="--shiki-light:#7B30D0;--shiki-dark:#569CD6;">new</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> webpack</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;">BannerPlugin</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;最终版权归xxx所有&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">)],</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="打包-html-的-plugin" tabindex="-1"><a class="header-anchor" href="#打包-html-的-plugin"><span>打包 html 的 plugin</span></a></h4><p>HtmlWebpackPlugin：自动生成 index.html 文件，将打包的 js 文件自动通过 script 标签引入到 body 中。</p><p>安装：<code>npm install --save-dev html-webpack-plugin</code></p><p>配置：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// webpack.config.js</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> HtmlWebpackPlugin</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;html-webpack-plugin&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">module</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">exports</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">  plugins:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> [</span></span>
<span class="line"><span style="--shiki-light:#7B30D0;--shiki-dark:#569CD6;">    new</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> HtmlWebpackPlugin</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">({</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">      // 指定生成index的模板</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">      template:</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;"> &#39;index.html&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">    }),</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  ],</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="js-压缩-plugin" tabindex="-1"><a class="header-anchor" href="#js-压缩-plugin"><span>js 压缩 plugin</span></a></h4><p>在项目发布之前，我们需要对 js 等文件进行压缩处理,这里需要使用一个第三方压缩的插件：uglifyJsPlugin，这里指定版本号与 Cli2 版本一致</p><p>安装： <code>npm install --save-dev uglifyjs-webpack-plugin@1.1.1</code></p><p>配置：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// webpack.config.js</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> UglifyJsWebpackPlugin</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;uglifyjs-webpack-plugin&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">module</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">exports</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">  plugins:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> [</span><span style="--shiki-light:#7B30D0;--shiki-dark:#569CD6;">new</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> UglifyJsWebpackPlugin</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">()],</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="热更新-webpack-dev-server" tabindex="-1"><a class="header-anchor" href="#热更新-webpack-dev-server"><span>热更新：webpack-dev-server</span></a></h2><p>webpack 提供了一个可选的本地开发服务器，这个本地服务器基于 node.js 搭建，内部使用 express 框架，可以实现热更新，在使用前需要先安装：<code>npm install --save-dev webpack-dev-server@2.9.1</code></p><p>配置。devServer 也是作为 webpack 中的一个选项，选项本身可以设置如下属性：</p><ul><li>contentBase: 为哪一个文件夹提供本地服务，默认是根文件夹，一般只想 dist 目录</li><li>port: 端口号</li><li>inline: 页面实时刷新</li><li>historyApiFallback: 在 SPA 页面中，依赖 HTML5 的 history 模式</li></ul><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// webpack.config.js</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">module</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">exports</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  devServer： {</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">    contentBase: </span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;./dist&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">,</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">    inline: </span><span style="--shiki-light:#174781;--shiki-dark:#569CD6;">true</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  }</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外在 package.json 中配置一个新的 script: <code>&quot;dev&quot;: &quot;webpack-dev-server --open&quot;</code>, 其中<code>--open</code>参数表示直接打开浏览器</p><h2 id="配置分离" tabindex="-1"><a class="header-anchor" href="#配置分离"><span>配置分离</span></a></h2><p>有时候需要把生产的配置和开发的配置分开来，以便管理。一般分成 3 个文件：</p><ul><li>base.config.js ———— 基础的一些配置</li><li>dev.config.js ———— dev 的一些配置</li><li>prod.config.js ———— prod 的一些配置</li></ul><p>在分离之前，需要先安装<code>webpack-merge</code>来合并分离后的配的文件，使用<code>npm install --save-dev webpack-merge</code>安装</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// base.config.js、dev.config.js、prod.config.js在同一个文件夹中</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// base.config.js</span></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">module</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">exports</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // 一些dev和prod都有的配置 ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// dev.config.js</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> webpackMerge</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;wepack-merge&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> baseConfig</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;./base.config.js&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">module</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">exports</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> webpackMerge</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;">baseConfig</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">, {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // 一些dev独有的配置 ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">  devServer:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  },</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">// prod.config.js</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> webpackMerge</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;wepack-merge&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> baseConfig</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;./base.config.js&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"><span style="--shiki-light:#0991B6;--shiki-dark:#569CD6;">const</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;"> UglifyJsWebpackPlugin</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> require</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&#39;uglifyjs-webpack-plugin&#39;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">module</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">.</span><span style="--shiki-light:#DC3EB7;--shiki-dark:#4EC9B0;">exports</span><span style="--shiki-light:#7B30D0;--shiki-dark:#D4D4D4;"> =</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> webpackMerge</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(</span><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;">baseConfig</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">, {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">  // 一些prod独有的配置 ...</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#9CDCFE;">  plugins:</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;"> [</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#7B30D0;--shiki-dark:#569CD6;">    new</span><span style="--shiki-light:#7EB233;--shiki-dark:#DCDCAA;"> UglifyJsWebpackPlugin</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">(),</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  ],</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改之后需要将<code>package.json</code>中的 script 脚本修改一下：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#002339;--shiki-dark:#E6E6E6;--shiki-light-bg:#FFF;--shiki-dark-bg:#222222;"><pre class="shiki shiki-themes slack-ochin slack-dark vp-code"><code><span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">/**</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> * 假设文件结构如下</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> * - packasge.json</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> * - build</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> *    - base.config.js</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> *    - dev.config.js</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> *    - prod.config.js</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;"> */</span></span>
<span class="line"><span style="--shiki-light:#2F86D2;--shiki-dark:#9CDCFE;">  script</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">： {</span></span>
<span class="line"><span style="--shiki-light:#357B42;--shiki-dark:#6A9955;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit;">    // 默认的webapck.config.js不用了 手动指定配置文件位置</span></span>
<span class="line"><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">    &quot;build&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">: </span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&quot;webpack --config ./build/prod.config.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">    &quot;dev&quot;</span><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">: </span><span style="--shiki-light:#A44185;--shiki-dark:#CE9178;">&quot;webpack-dev-server --open --config ./build/dev.config.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#002339;--shiki-dark:#E6E6E6;">  }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Tips：此时打包，会发现根目录下的 dist 没有打包出来的文件，而是在 build 文件夹下，这是因为<code>base.config.js</code>中配置的<code>output</code>的<code>path.reslove(__dirname, &#39;dist&#39;)</code>，将<code>&#39;dist&#39;</code>修改为<code>&#39;../dist&#39;</code>即可</p></blockquote>`,65),h=[e];function t(k,p){return a(),i("div",null,h)}const c=s(l,[["render",t],["__file","Webpack.html.vue"]]),g=JSON.parse('{"path":"/docs/note/front-end/Vue2/Webpack.html","title":"模块打包器","lang":"zh-CN","frontmatter":{"title":"模块打包器","date":"2021-07-17T00:00:00.000Z","description":"什么是 Webpack 本质上，webpack 是一个现代 JavaScript 应用程序的静态模块打包器(module bundler)。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 bundle。 其实就是 模块 和 打包 前...","head":[["meta",{"property":"og:url","content":"https://blog.white233.top/docs/note/front-end/Vue2/Webpack.html"}],["meta",{"property":"og:site_name","content":"温故而知新~"}],["meta",{"property":"og:title","content":"模块打包器"}],["meta",{"property":"og:description","content":"什么是 Webpack 本质上，webpack 是一个现代 JavaScript 应用程序的静态模块打包器(module bundler)。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 bundle。 其实就是 模块 和 打包 前..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-07T09:12:43.000Z"}],["meta",{"property":"article:author","content":"White"}],["meta",{"property":"article:published_time","content":"2021-07-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-07T09:12:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模块打包器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-07-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-07T09:12:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"White\\",\\"url\\":\\"https://blog.white233.top\\",\\"email\\":\\"white996@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是 Webpack","slug":"什么是-webpack","link":"#什么是-webpack","children":[]},{"level":2,"title":"前端模块化","slug":"前端模块化","link":"#前端模块化","children":[]},{"level":2,"title":"webpack 安装","slug":"webpack-安装","link":"#webpack-安装","children":[]},{"level":2,"title":"入口和出口","slug":"入口和出口","link":"#入口和出口","children":[]},{"level":2,"title":"loader","slug":"loader","link":"#loader","children":[{"level":3,"title":"ES6 -> ES5","slug":"es6-es5","link":"#es6-es5","children":[]},{"level":3,"title":"webpack 配置 Vue","slug":"webpack-配置-vue","link":"#webpack-配置-vue","children":[]},{"level":3,"title":"el 和 template 的区别","slug":"el-和-template-的区别","link":"#el-和-template-的区别","children":[]}]},{"level":2,"title":"plugin","slug":"plugin","link":"#plugin","children":[{"level":3,"title":"loader 和 plugin 的区别","slug":"loader-和-plugin-的区别","link":"#loader-和-plugin-的区别","children":[]},{"level":3,"title":"plugin 的使用","slug":"plugin-的使用","link":"#plugin-的使用","children":[]}]},{"level":2,"title":"热更新：webpack-dev-server","slug":"热更新-webpack-dev-server","link":"#热更新-webpack-dev-server","children":[]},{"level":2,"title":"配置分离","slug":"配置分离","link":"#配置分离","children":[]}],"git":{"createdTime":1626536851000,"updatedTime":1717751563000,"contributors":[{"name":"white","email":"294476387@qq.com","commits":2}]},"readingTime":{"minutes":6.8,"words":2040},"filePathRelative":"docs/note/front-end/Vue2/Webpack.md","localizedDate":"2021年7月17日","excerpt":"<h2>什么是 Webpack</h2>\\n<p>本质上，webpack 是一个现代 JavaScript 应用程序的静态<strong>模块打包</strong>器(module bundler)。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 bundle。</p>\\n<p>其实就是 <strong>模块</strong> 和 <strong>打包</strong></p>\\n<h2>前端模块化</h2>\\n<p>在 ES6 之前，需要借助其他工具才能进行模块化开发，完成开发后还需要处理模块间的各种依赖，并且需将其进行整合打包。</p>","autoDesc":true}');export{c as comp,g as data};
