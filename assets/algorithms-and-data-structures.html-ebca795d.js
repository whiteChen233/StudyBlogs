const t=JSON.parse('{"key":"v-4c130a87","path":"/zh/QCCSTP/software-design-engineer/algorithms-and-data-structures.html","title":"算法与数据结构","lang":"zh-CN","frontmatter":{"title":"算法与数据结构","date":"2021-10-22T00:00:00.000Z","description":"哈夫曼编码是一种一致性编码, 又称熵编码法, 用于数据的无算耗压缩。 逆波兰式, 也叫后缀表达式, 是将运算符写在操作数之后的表示方法。对逆波兰式求值的方法是从左至右扫描表达式, 遇到操作数则压栈, 遇到运算符号则从栈中弹出操作数进行运算, 然后将结果压入栈中, 重复该过程直至表达式结束, 最后栈顶的元素即为结果。 二维数组 将二维数组元素存储到存储器中有两种主要技术 ： 按行存储：二维数组的所有行连续地存储在存储器中。 按列存储：二维数组的所有列都连续地存储在存储器中。","head":[["meta",{"property":"og:url","content":"https://whiteChen233/whitechen233.github.io/zh/QCCSTP/software-design-engineer/algorithms-and-data-structures.html"}],["meta",{"property":"og:site_name","content":"温故而知新~"}],["meta",{"property":"og:title","content":"算法与数据结构"}],["meta",{"property":"og:description","content":"哈夫曼编码是一种一致性编码, 又称熵编码法, 用于数据的无算耗压缩。 逆波兰式, 也叫后缀表达式, 是将运算符写在操作数之后的表示方法。对逆波兰式求值的方法是从左至右扫描表达式, 遇到操作数则压栈, 遇到运算符号则从栈中弹出操作数进行运算, 然后将结果压入栈中, 重复该过程直至表达式结束, 最后栈顶的元素即为结果。 二维数组 将二维数组元素存储到存储器中有两种主要技术 ： 按行存储：二维数组的所有行连续地存储在存储器中。 按列存储：二维数组的所有列都连续地存储在存储器中。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-09T08:08:50.000Z"}],["meta",{"property":"article:published_time","content":"2021-10-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-09T08:08:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"算法与数据结构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-10-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-09T08:08:50.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1664543446000,"updatedTime":1675930130000,"contributors":[{"name":"White","email":"294476387@qq.com","commits":3},{"name":"white","email":"294476387@qq.com","commits":2}]},"readingTime":{"minutes":15.12,"words":4535},"filePathRelative":"zh/QCCSTP/software-design-engineer/algorithms-and-data-structures.md","localizedDate":"2021年10月22日","excerpt":"<hr>\\n<p>哈夫曼编码是一种一致性编码, 又称熵编码法, 用于数据的无算耗压缩。</p>\\n<hr>\\n<p>逆波兰式, 也叫后缀表达式, 是将运算符写在操作数之后的表示方法。对逆波兰式求值的方法是从左至右扫描表达式, 遇到操作数则压栈, 遇到运算符号则从栈中弹出操作数进行运算, 然后将结果压入栈中, 重复该过程直至表达式结束, 最后栈顶的元素即为结果。</p>\\n<hr>\\n<p>二维数组</p>\\n<p>将二维数组元素存储到存储器中有两种主要技术 ：</p>\\n<ol>\\n<li>按行存储：二维数组的所有行连续地存储在存储器中。</li>\\n<li>按列存储：二维数组的所有列都连续地存储在存储器中。</li>\\n</ol>","autoDesc":true}');export{t as data};
